package cda.ftp.ihm.components;

import javafx.beans.binding.Bindings;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.control.ScrollPane;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.Priority;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;

public class FTPselectView {
	
	public TilePane tilePane;
	
	private final Background focusBackground = new Background(new BackgroundFill(Color.LIGHTSKYBLUE, CornerRadii.EMPTY, Insets.EMPTY));
    private final Background unfocusBackground = new Background(new BackgroundFill(Color.TRANSPARENT, CornerRadii.EMPTY, Insets.EMPTY));

	public ScrollPane generateView() {
		FTPiconView icon1 = new FTPiconView("Documents", true);
		FTPiconView icon2 = new FTPiconView("Store", false);
		FTPiconView icon3 = new FTPiconView("poesie.txt", false);
		FTPiconView icon4 = new FTPiconView("projet.zip", false);
		FTPiconView icon5 = new FTPiconView("img1.png", false);
		FTPiconView icon6 = new FTPiconView("img2.png", false);
		FTPiconView icon7 = new FTPiconView("exec", false);
		FTPiconView icon8 = new FTPiconView(".pass", false);
		FTPiconView icon9 = new FTPiconView("frozen.avi", false);
		
        tilePane = new TilePane();
        
        ScrollPane scrollPane = new ScrollPane();
        scrollPane.setPadding(new Insets(8, 16, 16, 32));
        scrollPane.fitToWidthProperty().set(true);
        scrollPane.hbarPolicyProperty().setValue(ScrollPane.ScrollBarPolicy.NEVER);
        VBox.setVgrow(scrollPane, Priority.ALWAYS);
        
        scrollPane.setContent(tilePane);
        tilePane.setHgap(16);
        tilePane.setVgap(16);
        
        tilePane.setTileAlignment(Pos.TOP_LEFT);
        

        tilePane.getChildren().add(icon1.generateView());
        tilePane.getChildren().add(icon2.generateView());
        tilePane.getChildren().add(icon3.generateView());
        tilePane.getChildren().add(icon4.generateView());
        tilePane.getChildren().add(icon5.generateView());
        tilePane.getChildren().add(icon6.generateView());
        tilePane.getChildren().add(icon7.generateView());
        tilePane.getChildren().add(icon8.generateView());
        tilePane.getChildren().add(icon9.generateView());
        
        boxifyVBoxes();


        return scrollPane;
	}
	private void boxifyVBoxes() {
        for(Node child : tilePane.getChildren()) {
            VBox vb = (VBox) child;
            // when vbox is clicked focus on it
            vb.setOnMouseClicked(e -> {
                vb.requestFocus();
            });

            // use different backgrounds for focused and unfocused states
            vb.backgroundProperty().bind(Bindings
                    .when(vb.focusedProperty())
                    .then(focusBackground)
                    .otherwise(unfocusBackground)
            );
        }
    }
}
