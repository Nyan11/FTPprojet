/*
 * TP JAVA RIP
 * Min Client FTP
 * */
package cda.projet.client;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

public class Main {

	static Socket socket;
	static BufferedReader br;
	static PrintStream ps;
	static Scanner sc;

	public static void main(String[] args) {
		System.out.println("Le Client FTP");

		try {
			socket = new Socket("localhost", 2121);
		

		br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		ps = new PrintStream(socket.getOutputStream());

		sc = new Scanner(System.in);

		String send = "";
		String recv = "";
		File file;

		/*
		recv = recvMessage();
		ps.println("user yann");
		recv = recvMessage();
		ps.println("pass azerty");
		recv = recvMessage();
		*/
		while(true) {
			send = sc.nextLine();
			if(send.equals("bye")) {
				break;
			}
			else if(send.startsWith("get ")) {
				ps.println(send);
				recv = recvMessage();
				getCommande(recv, send);
			}
			else if(send.startsWith("stor ")) {
				file = new File(send.split(" ")[1]);
				if(!file.exists() || !file.isFile()) {
					System.out.println("2 le fichier n'existe pas");
				}
				else {
					ps.println(send);
					recv = recvMessage();
					storCommande(recv, send, file);
				}
			}
			else if(send.startsWith("user ") || send.startsWith("pass ") || send.equals("ls") || send.equals("pwd") || send.startsWith("cd ")){
				ps.println(send);
				recv = recvMessage();
			}
			else {
				System.out.println("Commande inconnue");
			}
		}
		ps.println("bye");	
		socket.close();
		sc.close();
		} catch (IOException e) {
			System.out.println("Le serveur est arreter");
		} catch (NullPointerException e) {
			System.out.println("Le serveur a un probleme");
		}
	
	}

	public static String recvMessage() throws IOException {
		String value = "";
		do {
			value = br.readLine();
			System.out.println(">> " + value);
		} while(value.charAt(0) == '1');
		return value;
	}

	public static void getCommande(String recv, String send) throws UnknownHostException, IOException {
		if(recv.charAt(0) == '0') {
			int port = Integer.parseInt(recv.split(" ")[4]);
			byte[] aByte = new byte[1];
			int bytesRead;
			System.out.println("Debug:" + port);
			System.out.flush();

			Socket getSocket = new Socket("localhost", port);
			InputStream is = getSocket.getInputStream();

			ByteArrayOutputStream baos = new ByteArrayOutputStream();

			FileOutputStream fos = new FileOutputStream(send.split(" ")[1]);
			BufferedOutputStream bos = new BufferedOutputStream(fos);

			bytesRead = is.read(aByte, 0, aByte.length);

			do {
				baos.write(aByte);
				bytesRead = is.read(aByte);
			} while (bytesRead != -1);

			bos.write(baos.toByteArray());
			bos.flush();
			bos.close();
			getSocket.close();
		}
	}

	public static void storCommande(String recv, String send, File file) throws UnknownHostException, IOException {


		Socket socketFile;
		BufferedOutputStream bos;
		FileInputStream fis;
		BufferedInputStream bis;

		if(recv.charAt(0) == '0') {
			int port = Integer.parseInt(recv.split(" ")[4]);

			byte[] barray = new byte[(int) file.length()];

			socketFile = new Socket("localhost", port);

			bos = new BufferedOutputStream(socketFile.getOutputStream());

			fis = new FileInputStream(file);

			bis = new BufferedInputStream(fis);

			bis.read(barray, 0, barray.length);

			bos.write(barray);
			bos.flush();
			bos.close();
			socketFile.close();
		}
	}
}
